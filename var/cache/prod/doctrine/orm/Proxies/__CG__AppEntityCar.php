<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Car extends \App\Entity\Car implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'license_plate', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'veh_id_number', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'eng_id_number', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'carsBrand', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'carsModel', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'orders', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'user'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'license_plate', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'veh_id_number', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'eng_id_number', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'carsBrand', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'carsModel', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'orders', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'user'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Car $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLicensePlate(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicensePlate', []);

        return parent::getLicensePlate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicensePlate(string $license_plate): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicensePlate', [$license_plate]);

        return parent::setLicensePlate($license_plate);
    }

    /**
     * {@inheritDoc}
     */
    public function getVehIdNumber(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVehIdNumber', []);

        return parent::getVehIdNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setVehIdNumber(string $veh_id_number): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVehIdNumber', [$veh_id_number]);

        return parent::setVehIdNumber($veh_id_number);
    }

    /**
     * {@inheritDoc}
     */
    public function getEngIdNumber(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEngIdNumber', []);

        return parent::getEngIdNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setEngIdNumber(string $eng_id_number): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEngIdNumber', [$eng_id_number]);

        return parent::setEngIdNumber($eng_id_number);
    }

    /**
     * {@inheritDoc}
     */
    public function getCarsBrand(): ?\App\Entity\CarsBrand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCarsBrand', []);

        return parent::getCarsBrand();
    }

    /**
     * {@inheritDoc}
     */
    public function setCarsBrand(?\App\Entity\CarsBrand $carsBrand): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCarsBrand', [$carsBrand]);

        return parent::setCarsBrand($carsBrand);
    }

    /**
     * {@inheritDoc}
     */
    public function getCarsModel(): ?\App\Entity\CarsModel
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCarsModel', []);

        return parent::getCarsModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setCarsModel(?\App\Entity\CarsModel $carsModel): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCarsModel', [$carsModel]);

        return parent::setCarsModel($carsModel);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrders(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrders', []);

        return parent::getOrders();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrder(\App\Entity\Order $order): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrder', [$order]);

        return parent::addOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrder(\App\Entity\Order $order): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrder', [$order]);

        return parent::removeOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

}
